from typing import Any, Pattern, Union

def str_flags_to_int(str_flags: str) -> int: ...

class Regex:
    @classmethod
    def from_native(cls: Any, regex: Pattern[str]) -> Regex: ...
    pattern: Any = ...
    flags: Any = ...
    def __init__(self, pattern: Union[str, bytes], flags: int = ...) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    __hash__: Any = ...
    def __ne__(self, other: Any) -> Any: ...
    def try_compile(self) -> Pattern[str]: ...
