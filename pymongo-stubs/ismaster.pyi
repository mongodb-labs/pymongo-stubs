from typing import Any, Dict, List, Optional, Tuple

class IsMaster:
    def __init__(self, doc: Any, awaitable: bool = ...) -> None: ...
    @property
    def document(self) -> Dict[str, Any]: ...
    @property
    def server_type(self) -> int: ...
    @property
    def all_hosts(self) -> List[Any]: ...
    @property
    def tags(self) -> Dict[str, Any]: ...
    @property
    def primary(self) -> Optional[Tuple[str, int]]: ...
    @property
    def replica_set_name(self) -> Optional[str]: ...
    @property
    def max_bson_size(self) -> int: ...
    @property
    def max_message_size(self) -> int: ...
    @property
    def max_write_batch_size(self) -> int: ...
    @property
    def min_wire_version(self) -> int: ...
    @property
    def max_wire_version(self) -> int: ...
    @property
    def set_version(self) -> Any: ...
    @property
    def election_id(self) -> Any: ...
    @property
    def cluster_time(self): ...
    @property
    def logical_session_timeout_minutes(self): ...
    @property
    def is_writable(self) -> bool: ...
    @property
    def is_readable(self) -> bool: ...
    @property
    def me(self) -> Optional[Tuple[str, int]]: ...
    @property
    def last_write_date(self) -> Any: ...
    @property
    def compressors(self): ...
    @property
    def sasl_supported_mechs(self): ...
    @property
    def speculative_authenticate(self): ...
    @property
    def topology_version(self): ...
    @property
    def awaitable(self): ...
