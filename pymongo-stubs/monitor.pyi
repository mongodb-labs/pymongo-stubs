from typing import Any, Optional

from pymongo.pool import Pool
from pymongo.server_description import ServerDescription
from pymongo.settings import TopologySettings
from pymongo.topology import Topology

class MonitorBase:
    def __init__(self, topology: Any, name: Any, interval: Any, min_interval: Any): ...
    def open(self) -> None: ...
    def gc_safe_close(self) -> None: ...
    def close(self) -> None: ...
    def join(self, timeout: Optional[Any] = ...) -> None: ...
    def request_check(self) -> None: ...

class Monitor(MonitorBase):
    heartbeater: Any = ...
    def __init__(
        self, server_description: ServerDescription, topology: Topology, pool: Pool, topology_settings: TopologySettings
    ) -> None: ...
    def cancel_check(self) -> None: ...
    def gc_safe_close(self) -> None: ...
    def close(self) -> None: ...

class SrvMonitor(MonitorBase):
    def __init__(self, topology: Any, topology_settings: Any) -> None: ...

class _RttMonitor(MonitorBase):
    def __init__(self, topology: Any, topology_settings: Any, pool: Any) -> None: ...
    def close(self) -> None: ...
    def add_sample(self, sample: Any) -> None: ...
    def average(self): ...
    def reset(self): ...
