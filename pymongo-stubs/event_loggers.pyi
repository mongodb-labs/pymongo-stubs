from typing import Any

from pymongo import monitoring

class CommandLogger(monitoring.CommandListener):
    def started(self, event: Any) -> None: ...
    def succeeded(self, event: Any) -> None: ...
    def failed(self, event: Any) -> None: ...

class ServerLogger(monitoring.ServerListener):
    def opened(self, event: Any) -> None: ...
    def description_changed(self, event: Any) -> None: ...
    def closed(self, event: Any) -> None: ...

class HeartbeatLogger(monitoring.ServerHeartbeatListener):
    def started(self, event: Any) -> None: ...
    def succeeded(self, event: Any) -> None: ...
    def failed(self, event: Any) -> None: ...

class TopologyLogger(monitoring.TopologyListener):
    def opened(self, event: Any) -> None: ...
    def description_changed(self, event: Any) -> None: ...
    def closed(self, event: Any) -> None: ...

class ConnectionPoolLogger(monitoring.ConnectionPoolListener):
    def pool_created(self, event: Any) -> None: ...
    def pool_cleared(self, event: Any) -> None: ...
    def pool_closed(self, event: Any) -> None: ...
    def connection_created(self, event: Any) -> None: ...
    def connection_ready(self, event: Any) -> None: ...
    def connection_closed(self, event: Any) -> None: ...
    def connection_check_out_started(self, event: Any) -> None: ...
    def connection_check_out_failed(self, event: Any) -> None: ...
    def connection_checked_out(self, event: Any) -> None: ...
    def connection_checked_in(self, event: Any) -> None: ...
